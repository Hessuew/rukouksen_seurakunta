---
import Button from '~/components/ui/Button.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import TestimonialCard from '~/components/widgets/TestimonialCard.astro';
import TestimonialCardContainer from '~/components/widgets/TestimonIalCardContainer';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = await Astro.slots.render('subtitle'),
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

// Define column number for testimonial cards distribution
const columns1 = 4;
const columns2 = 4;
const columns2Boundaries = columns1 + columns2;
const columns3 = 10;
const columns3Boundaries = columns2Boundaries + columns3;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <TestimonialCardContainer client:load>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      <div class="flex flex-col items-center gap-6">
        {
          testimonials &&
            testimonials
              .filter((_, index) => index < columns1)
              .map((testimonial) => <TestimonialCard {...testimonial} />)
        }
      </div>
      <div class="flex flex-col gap-6">
        {
          testimonials &&
            testimonials
              .filter((_, index) => index >= columns1 && index < columns2Boundaries)
              .map((testimonial) => <TestimonialCard {...testimonial} />)
        }
      </div>
      <div class="flex flex-col gap-6">
        {
          testimonials &&
            testimonials
              .filter((_, index) => index >= columns2Boundaries && index < columns3Boundaries)
              .map((testimonial) => <TestimonialCard {...testimonial} />)
        }
      </div>
    </div>
  </TestimonialCardContainer>
  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
