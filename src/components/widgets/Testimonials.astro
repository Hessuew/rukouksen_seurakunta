---
import Button from '~/components/ui/Button.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import TestimonialCard from '~/components/widgets/TestimonialCard.astro';
import TestimonialCardContainer from '~/components/widgets/TestimonIalCardContainer';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = await Astro.slots.render('subtitle'),
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

// Calculate total testimonials
const totalTestimonials = testimonials.length;

// For small/medium screens (2 columns)
// Distribute testimonials evenly between two columns
const halfCount = Math.ceil(totalTestimonials / 2);
const smFirstColumnItems = testimonials.slice(0, halfCount);
const smSecondColumnItems = testimonials.slice(halfCount);

// For large screens (3 columns)
// Distribute testimonials evenly between three columns
const thirdCount = Math.ceil(totalTestimonials / 3);
const lgFirstColumnItems = testimonials.slice(0, thirdCount);
const lgSecondColumnItems = testimonials.slice(thirdCount, 2 * thirdCount);
const lgThirdColumnItems = testimonials.slice(2 * thirdCount);
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <TestimonialCardContainer client:load>
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      {/* First column */}
      <div class="space-y-6">
        {/* Small/Medium screens: First half of testimonials */}
        {
          smFirstColumnItems.map((testimonial, index) => (
            <div class={`lg:hidden ${index > 0 ? 'mt-6' : ''}`}>
              <TestimonialCard {...testimonial} />
            </div>
          ))
        }

        {/* Large screens: First third of testimonials */}
        {
          lgFirstColumnItems.map((testimonial, index) => (
            <div class={`hidden lg:block ${index > 0 ? 'mt-6' : ''}`}>
              <TestimonialCard {...testimonial} />
            </div>
          ))
        }
      </div>

      {/* Second column */}
      <div class="space-y-6">
        {/* Small/Medium screens: Second half of testimonials */}
        {
          smSecondColumnItems.map((testimonial, index) => (
            <div class={`lg:hidden ${index > 0 ? 'mt-6' : ''}`}>
              <TestimonialCard {...testimonial} />
            </div>
          ))
        }

        {/* Large screens: Second third of testimonials */}
        {
          lgSecondColumnItems.map((testimonial, index) => (
            <div class={`hidden lg:block ${index > 0 ? 'mt-6' : ''}`}>
              <TestimonialCard {...testimonial} />
            </div>
          ))
        }
      </div>

      {/* Third column - Only visible on large screens */}
      <div class="hidden lg:block space-y-6">
        {
          lgThirdColumnItems.map((testimonial, index) => (
            <div class={index > 0 ? 'mt-6' : ''}>
              <TestimonialCard {...testimonial} />
            </div>
          ))
        }
      </div>
    </div>
  </TestimonialCardContainer>

  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
