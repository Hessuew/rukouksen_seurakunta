---
import type { ImageMetadata } from 'astro';

interface Item {
  title?: string;
  description?: string;
  subtitle?: string;
  image?: {
    src: string | ImageMetadata;
    alt: string;
  };
}

interface Props {
  items?: Array<Item>;
  classes?: Record<string, string>;
}

const { items = [], classes = {} } = Astro.props;
---

<div class={`max-w-7xl mx-auto ${classes?.container ?? ''}`}>
  <div class="divide-y divide-gray-200 dark:divide-gray-700">
    {
      items.map((item, index) => (
        <div
          class="py-6 flex items-center space-x-4 intersect-once intersect-item motion-safe:opacity-0 motion-safe:translate-y-4"
          style={`--animation-delay: ${index * 150}ms`}
        >
          {item.image && (
            <div class="flex-shrink-0">
              <img src={item.image.src} alt={item.image.alt} class="h-16 w-16 rounded-full object-cover" />
            </div>
          )}
          <div class="flex-grow">
            <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100">{item.title}</h3>
            <p class="text-primary">{item.subtitle}</p>
            <p class="text-gray-600 dark:text-gray-400 text-sm mt-1">{item.description}</p>
          </div>
        </div>
      ))
    }
  </div>
</div>

<style>
  .intersect-item {
    transition: all 0.5s ease-out;
    transition-delay: var(--animation-delay, 0ms);
  }

  .intersect-item.motion-safe\:intersect {
    opacity: 1;
    transform: translateY(0);
  }
</style>
